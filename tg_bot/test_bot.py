import telebot
import re
import time
from datetime import date
from telebot import types
from user_db import init_db, check, add_info, change_cl, stat, de, get_gr
from schedule_db import get_schedule
from send_message import send_mes

TOKEN = '1634401190:AAFqZgHM456Jyn8AnCqzKyBP0bOjk_TIl-c'
bot = telebot.TeleBot(TOKEN, parse_mode=None)

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
	#print(message)

	bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! ")
	init_db()
	a = check(check_id = message.from_user.id)
	if a == False:
		bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–π –≥—Ä—É–ø–ø–µ —Ç—ã —É—á–∏—à—å—Å—è?üßëüèΩ‚Äçüéì –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 11-***.")
	else:
		bot.send_message(message.chat.id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!‚úÖ –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ú–µ–Ω—é'.")


@bot.message_handler(content_types = ['text'])
def reg(message):
	if message.chat.type == 'private':
		result_gr = re.findall(r'\d{2}-\d{3}',message.text)
		result_time = re.findall(r'\d{2}:\d{2}',message.text)
		day = re.findall(r'\d{4}-\d{2}-\d{2}',message.text)
		cl = re.findall(r'-\w+',message.text)
		tx = [message.text]


		if tx == result_gr:
			markup = types.ReplyKeyboardMarkup()
			iteamY = types.KeyboardButton('–•–æ—á—É')
			iteamN = types.KeyboardButton('–ù–µ —Ö–æ—á—É')
			markup.add(iteamY,iteamN)
			bot.send_message(message.chat.id, "–•–æ—á–µ—à—å –ª–∏ —Ç—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º –æ–ø—Ä–æ—Å–µ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –∑–∞–Ω—è—Ç–∏–π?", reply_markup = markup)
			add_info(user_id = message.from_user.id, gr = message.text , cl = '', date = '', time = '')

		elif tx == ['–•–æ—á—É'] or tx == ['–ù–µ —Ö–æ—á—É']:
			if message.text == '–ù–µ —Ö–æ—á—É':
				bot.send_message(message.chat.id, "–•–æ—Ä–æ—à–æ, —Ç—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –ø—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å, –æ—Ç–ø—Ä–∞–≤–∏–≤ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ú–µ–Ω—é'.")
				add_info(user_id = message.from_user.id, gr = '', cl = '', date = '', time = '' )
				de(user_id = message.from_user.id)
			else:
				bot.send_message(message.chat.id, "–í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è —Ç—ã —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è? –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: —á—á:–º–º (12:00, 09:30)")

		elif tx == result_time:
			error = re.findall(r':\d{2}',message.text)
			error = re.findall(r'\d{2}',error[0])
			error_ = re.findall(r'\d{2}:',message.text)
			error_ = re.findall(r'\d{2}',error_[0])
			if int(error[0]) > 59 or int(error_[0]) > 23:
				bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ‚ùå")
			else:
				de(user_id = message.from_user.id)
				add_info(user_id = message.from_user.id, gr = '', cl = '', date = '', time = message.text)
				bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ!üòä –¢—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è, –æ—Ç–ø—Ä–∞–≤–∏–≤ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ú–µ–Ω—é'.")
				send_mes(message.chat.id, int(error_[0]), int(error[0]))

		elif tx == ['–ú–µ–Ω—é'] or tx == ['–º–µ–Ω—é']:
			markup_m = types.ReplyKeyboardMarkup()
			iteam_inter = types.KeyboardButton('–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å')
			iteam_shc = types.KeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
			iteam_edit = types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')
			markup_m.add(iteam_shc, iteam_inter, iteam_edit)
			bot.send_message(message.chat.id, "–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é.", reply_markup = markup_m)

		elif message.text == '–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å':
			markup_check = types.ReplyKeyboardMarkup()
			iteam_stat = types.KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
			iteam_mark = types.KeyboardButton('–û—Ç–º–µ—Ç–∏—Ç—å—Å—è')
			iteam_menu = types.KeyboardButton('–ú–µ–Ω—é')
			markup_check.add(iteam_stat, iteam_mark, iteam_menu)
			bot.send_message(message.chat.id, "–•–æ—á–µ—à—å –æ—Ç–º–µ—Ç–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫–∏ –∏–ª–∏ —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É?", reply_markup = markup_check)

		elif message.text == '–û—Ç–º–µ—Ç–∏—Ç—å—Å—è':
			markup_day = types.ReplyKeyboardMarkup()
			iteam_today = types.KeyboardButton('–ó–∞ —Å–µ–≥–æ–¥–Ω—è')
			iteam_date = types.KeyboardButton('–í—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å')
			iteam_menu = types.KeyboardButton('–ú–µ–Ω—é')
			markup_day.add(iteam_today, iteam_date, iteam_menu)
			bot.send_message(message.chat.id, "–ó–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ç—ã —Ö–æ—á–µ—à—å –æ—Ç–º–µ—Ç–∏—Ç—å—Å—è?", reply_markup = markup_day)

		elif message.text == '–ó–∞ —Å–µ–≥–æ–¥–Ω—è':
			day_ = str(date.today())
			year = re.findall(r'\d{4}',day_)
			m = re.findall(r'-\d{2}-', day_)
			m = re.findall(r'\d{2}',m[0])
			d = re.findall(r'-\d{2}$', day_)
			d = re.findall(r'\d{2}',m[0])
			if m == [] or year == [] or d == []:
				bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ‚ùå")
			else:
				add_info(user_id = message.from_user.id, gr = '', cl = '', date = day_, time = '' )
				bot.reply_to(message, "–ü–µ—Ä–µ—á–∏—Å–ª–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –ø—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª(–∞) –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å.\n–ù–∞—á–Ω–∏ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –∑–Ω–∞–∫–∞ '-'.\n–ù–∞–ø—Ä–∏–º–µ—Ä, -–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞, –§–∏–∑-—Ä–∞")

		elif message.text == '–í—ã–±—Ä–∞—Ç—å –¥–µ–Ω—å':
			bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –≥–≥–≥–≥-–º–º-–¥–¥ (2020-01-19)")

		elif tx == day:
			year = re.findall(r'\d{4}',message.text)
			m = re.findall(r'-\d{2}-',message.text)
			m = re.findall(r'\d{2}',m[0])
			d= re.findall(r'-\d{2}$',message.text)
			d = re.findall(r'\d{2}',m[0])
			if m == [] or year == [] or d == []:
				bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ‚ùå")
			else:
				add_info(user_id = message.from_user.id, gr = '', cl = '', date = day[0], time = '' )
				bot.reply_to(message, "–ü–µ—Ä–µ—á–∏—Å–ª–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –ø—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª(–∞) –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å.\n–ù–∞—á–Ω–∏ —Å–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –∑–Ω–∞–∫–∞ '-'.\n–ù–∞–ø—Ä–∏–º–µ—Ä, -–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞, –§–∏–∑-—Ä–∞")

		elif cl != []:
			change_cl(user_id = message.from_user.id, cl = message.text)
			cl = []

		elif message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
			mes = stat(user_id = message.from_user.id)
			if mes != {}:
				for key in mes:
					bot.send_message(message.chat.id, f'{key} —Ç—ã –ø—Ä–æ–ø—É—Å—Ç–∏–ª(–∞):\n{mes[key]}')
			else:
				bot.send_message(message.chat.id, f'–¢—ã –µ—â–µ –Ω–µ –æ—Ç–º–µ—á–∞–ª(–∞) –ø—Ä–æ–ø—É—Å–∫–∏')

		elif message.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ':
			markup = types.ReplyKeyboardMarkup()
			mon = types.KeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
			tues = types.KeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫')
			wed = types.KeyboardButton('–°—Ä–µ–¥–∞')
			thur = types.KeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥')
			fr = types.KeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞')
			sut = types.KeyboardButton('–°—É–±–±–æ—Ç–∞')
			markup.add(mon, tues, wed, thur, fr, sut)
			bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å.", reply_markup = markup)
			# cl = get_gr(message.from_user.id
			# sch = get_schedule(get_gr(message.from_user.id), message.text)
			# bot.send_message(message.chat.id, sch)

		elif message.text == '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å':
			markup = types.ReplyKeyboardMarkup()
			iteamY = types.KeyboardButton('–•–æ—á—É')
			iteamN = types.KeyboardButton('–ù–µ —Ö–æ—á—É')
			markup.add(iteamY,iteamN)
			bot.send_message(message.chat.id, "–•–æ—á–µ—à—å –ª–∏ —Ç—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º –æ–ø—Ä–æ—Å–µ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –∑–∞–Ω—è—Ç–∏–π?",	reply_markup = markup)

		elif message.text == '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
			sch = get_schedule(number = get_gr(user_id = message.from_user.id), day = message.text)
			bot.send_message(message.chat.id, sch)
		elif message.text == '–í—Ç–æ—Ä–Ω–∏–∫':
			sch = get_schedule(number = get_gr(user_id = message.from_user.id), day = message.text)
			bot.send_message(message.chat.id, sch)
		elif message.text == '–°—Ä–µ–¥–∞':
			sch = get_schedule(number = get_gr(user_id = message.from_user.id), day = message.text)
			bot.send_message(message.chat.id, sch)
		elif message.text == '–ß–µ—Ç–≤–µ—Ä–≥':
			sch = get_schedule(number = get_gr(user_id = message.from_user.id), day = message.text)
			bot.send_message(message.chat.id, sch)
		elif message.text == '–ü—è—Ç–Ω–∏—Ü–∞':
			sch = get_schedule(number = get_gr(user_id = message.from_user.id), day = message.text)
			bot.send_message(message.chat.id, sch)
		elif message.text == '–°—É–±–±–æ—Ç–∞':
			sch = get_schedule(number = get_gr(user_id = message.from_user.id), day = message.text)
			bot.send_message(message.chat.id, sch)

		else:
			bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ‚ùå")

bot.polling()
